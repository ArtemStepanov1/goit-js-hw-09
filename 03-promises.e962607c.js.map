{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,SAAUF,SAASC,cAAc,uBACjCE,QAASH,SAASC,cAAc,sBAChCG,UAAWJ,SAASC,cAAc,yBAGpC,SAASI,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,C,SAACH,E,MAAUC,IAEnBG,EAAO,C,SAACJ,E,MAAUC,MAEnBA,MAIPT,EAAKC,KAAKgB,iBAAiB,UAAWC,IACrCA,EAAEC,iBACF,IAAIC,EAAQC,OAAOrB,EAAKI,SAASkB,OACjC,MAAMC,EAAWvB,EAAKM,UAAUgB,MAChC,IAAIE,EAAOH,OAAOrB,EAAKK,QAAQiB,OAC9B,GAAGF,EAAQ,GAAKI,EAAO,GAAKD,EAAW,EACrC,OAAOE,EAAA3B,GAAS4B,OAAOC,QAAQ,qCAE/B,IAAK,IAAIC,EAAI,EAAGA,GAAKL,EAAUK,IAC3BrB,EAAcqB,EAAER,GACfS,MAAK,EAACrB,SAAEA,EAAQC,MAAEA,MACjBgB,EAAA3B,GAAS4B,OAAOI,QAAQ,uBAAqBtB,QAAiBC,UAE/DsB,OAAM,EAACvB,SAAEA,EAAQC,MAAEA,MAClBgB,EAAA3B,GAAS4B,OAAOC,QAAQ,sBAAoBnB,QAAeC,UAE3DW,GAAgBI","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  form: document.querySelector('.form'),\n  delayInp: document.querySelector('input[name=\"delay\"]'),\n  stepInp: document.querySelector('input[name=\"step\"]'),\n  amountInp: document.querySelector('input[name=\"amount\"]'),\n};\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({position, delay});\n      } else {\n        reject({position, delay})\n      }\n    }, delay);\n  });\n};\n\nrefs.form.addEventListener('submit', (e) => {\n\te.preventDefault()\n\tlet delay = Number(refs.delayInp.value);\n\tconst position = refs.amountInp.value\n\tlet step = Number(refs.stepInp.value);\n  if(delay < 0 || step < 0 || position < 0){\n    return Notiflix.Notify.failure('Please enter only positive number');\n    } else {\n    for (let i = 1; i <= position; i++) {\n        createPromise(i,delay)\n        .then(({ position, delay }) => {\n          Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        })\n        .catch(({ position, delay }) => {\n          Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n        });\n          delay = delay + step;\t\n    }\n  }\n\n});\n\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$refs","form","document","querySelector","delayInp","stepInp","amountInp","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","e","preventDefault","delay1","Number","value","position1","step","$parcel$interopDefault","Notify","failure","i","then","success","catch"],"version":3,"file":"03-promises.e962607c.js.map"}